apply plugin: 'com.android.application'

android {
    //签名设置
    signingConfigs {
        release {
            keyAlias 'key'
            keyPassword '1234567890'
            storeFile file('../public.jks')
            storePassword '1234567890'
        }
        debug {
            keyAlias 'key'
            keyPassword '1234567890'
            storeFile file('../public.jks')
            storePassword '1234567890'
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "cn.liuyin.manhua"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 4
        versionName "1.0.3-${releaseTime()}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "zh"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //An HTTP & HTTP/2 client for Android and Java applications.
    implementation 'com.squareup.okhttp3:okhttp:4.7.0'
    // jsoup HTML parser library @ https://jsoup.org/
    //implementation 'org.jsoup:jsoup:1.11.2'
    //Java implementation of a Disk-based LRU cache which specifically targets Android compatibility.
    //implementation 'com.jakewharton:disklrucache:2.0.2'
    testImplementation 'junit:junit:4.13'
    implementation 'com.squareup.picasso:picasso:2.71828'
//    implementation 'com.github.bumptech.glide:glide:4.11.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.jakewharton:disklrucache:2.0.2'

}

static def releaseTime() {

    return new Date().format("yyyy.MM.dd.HH:mm", TimeZone.getTimeZone("GMT+08:00"))

}